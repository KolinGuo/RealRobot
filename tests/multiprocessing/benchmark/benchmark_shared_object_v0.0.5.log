---------- Benchmark creating SharedObject ----------
<class 'NoneType'>: 1000 iterations take 0.03776 seconds
<class 'bool'>: 1000 iterations take 0.01496 seconds
<class 'int'>: 1000 iterations take 0.01471 seconds
<class 'float'>: 1000 iterations take 0.01585 seconds
<class 'str'> (len=50): 1000 iterations take 0.01643 seconds
<class 'bytes'> (len=50): 1000 iterations take 0.01515 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.uint8'> shape=(480, 848, 3)): 1000 iterations take 0.314 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(720, 1280, 3)): 500 iterations take 3.804 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(10000, 10000)): 10 iterations take 2.489 seconds

---------- Benchmark fetching SharedObject ----------
<class 'NoneType'>: 1000 iterations take 0.001061 seconds
<class 'bool'>: 1000 iterations take 0.001028 seconds
<class 'int'>: 1000 iterations take 0.001166 seconds
<class 'float'>: 1000 iterations take 0.001083 seconds
<class 'str'> (len=50): 1000 iterations take 0.001284 seconds
<class 'bytes'> (len=50): 1000 iterations take 0.001248 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.uint8'> shape=(480, 848, 3)): 1000 iterations take 0.03728 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(720, 1280, 3)): 1000 iterations take 1.249 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(10000, 10000)): 20 iterations take 1.81 seconds

---------- Benchmark assigning SharedObject ----------
<class 'NoneType'>: 1000 iterations take 0.001353 seconds
<class 'bool'>: 1000 iterations take 0.001317 seconds
<class 'int'>: 1000 iterations take 0.001397 seconds
<class 'float'>: 1000 iterations take 0.001371 seconds
<class 'str'> (len=50): 1000 iterations take 0.001546 seconds
<class 'bytes'> (len=50): 1000 iterations take 0.001517 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.uint8'> shape=(480, 848, 3)): 1000 iterations take 0.04374 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(720, 1280, 3)): 1000 iterations take 1.302 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(10000, 10000)): 50 iterations take 1.931 seconds

---------- Benchmark creating from existing SharedObject ----------
<class 'NoneType'>: 1000 iterations take 0.008045 seconds
<class 'bool'>: 1000 iterations take 0.008648 seconds
<class 'int'>: 1000 iterations take 0.008644 seconds
<class 'float'>: 1000 iterations take 0.00865 seconds
<class 'str'> (len=50): 1000 iterations take 0.00857 seconds
<class 'bytes'> (len=50): 1000 iterations take 0.008518 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.uint8'> shape=(480, 848, 3)): 1000 iterations take 0.0507 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(720, 1280, 3)): 1000 iterations take 0.8082 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(10000, 10000)): 50 iterations take 1.218 seconds

---------- Benchmark checking SharedObject modified ----------
<class 'NoneType'>: 1000 iterations take 0.0008797 seconds
<class 'bool'>: 1000 iterations take 0.0008562 seconds
<class 'int'>: 1000 iterations take 0.0008509 seconds
<class 'float'>: 1000 iterations take 0.0008474 seconds
<class 'str'> (len=50): 1000 iterations take 0.0008544 seconds
<class 'bytes'> (len=50): 1000 iterations take 0.0008504 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.uint8'> shape=(480, 848, 3)): 1000 iterations take 0.001723 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(720, 1280, 3)): 1000 iterations take 0.004529 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(10000, 10000)): 50 iterations take 0.0004822 seconds

---------- Benchmark checking SharedObject triggered ----------
<class 'NoneType'>: 1000 iterations take 0.0009166 seconds
<class 'bool'>: 1000 iterations take 0.0008671 seconds
<class 'int'>: 1000 iterations take 0.000874 seconds
<class 'float'>: 1000 iterations take 0.0008706 seconds
<class 'str'> (len=50): 1000 iterations take 0.0008677 seconds
<class 'bytes'> (len=50): 1000 iterations take 0.000862 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.uint8'> shape=(480, 848, 3)): 1000 iterations take 0.001679 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(720, 1280, 3)): 1000 iterations take 0.004873 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(10000, 10000)): 50 iterations take 0.0005103 seconds

---------- Benchmark triggering SharedObject ----------
<class 'NoneType'>: 1000 iterations take 0.0008905 seconds
<class 'bool'>: 1000 iterations take 0.0008209 seconds
<class 'int'>: 1000 iterations take 0.0008236 seconds
<class 'float'>: 1000 iterations take 0.0008209 seconds
<class 'str'> (len=50): 1000 iterations take 0.0008334 seconds
<class 'bytes'> (len=50): 1000 iterations take 0.0008166 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.uint8'> shape=(480, 848, 3)): 1000 iterations take 0.001526 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(720, 1280, 3)): 1000 iterations take 0.003952 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(10000, 10000)): 50 iterations take 0.0004904 seconds

---------- Benchmark fetching/assigning SharedObject with 2 processes ----------
<class 'NoneType'>: 100 iterations take 7.355 seconds
<class 'bool'>: 100 iterations take 7.685 seconds
<class 'int'>: 100 iterations take 7.6 seconds
<class 'float'>: 100 iterations take 7.715 seconds
<class 'str'> (len=50): 100 iterations take 7.507 seconds
<class 'bytes'> (len=50): 100 iterations take 7.627 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.uint8'> shape=(480, 848, 3)): 100 iterations take 7.683 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(720, 1280, 3)): 100 iterations take 7.623 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(10000, 10000)): 10 iterations take 5.833 seconds

---------- Benchmark fetching/assigning SharedObject with 5 processes ----------
<class 'NoneType'>: 50 iterations take 7.231 seconds
<class 'bool'>: 50 iterations take 7.002 seconds
<class 'int'>: 50 iterations take 7.08 seconds
<class 'float'>: 50 iterations take 7.072 seconds
<class 'str'> (len=50): 50 iterations take 7.009 seconds
<class 'bytes'> (len=50): 50 iterations take 7.047 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.uint8'> shape=(480, 848, 3)): 50 iterations take 7.073 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(720, 1280, 3)): 50 iterations take 7.16 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(10000, 10000)): 10 iterations take 7.158 seconds
+------------------------------------------------+-----------------------+-----------------------+-----------------------+-----------------------+-----------------------+-----------------------+-----------------------+---------------------+---------------------+
| Object Type / Duration for 1 obj (mean ± std)  |         create        |         fetch         |         assign        |       create_ref      |        modified       |       triggered       |        trigger        | 2 proc fetch_assign | 5 proc fetch_assign |
+------------------------------------------------+-----------------------+-----------------------+-----------------------+-----------------------+-----------------------+-----------------------+-----------------------+---------------------+---------------------+
|               <class 'NoneType'>               | 3.77614e-05 ± 0.00052 |  1.06079e-06 ± 1e-06  |  1.35268e-06 ± 1e-06  | 8.04479e-06 ± 1.6e-06 | 8.79657e-07 ± 3.3e-07 | 9.16618e-07 ± 1.7e-07 | 8.90465e-07 ± 9.6e-07 |  0.0735542 ± 0.012  |   0.144614 ± 0.016  |
|                 <class 'bool'>                 | 1.49597e-05 ± 2.4e-06 |  1.0277e-06 ± 1.4e-07 | 1.31744e-06 ± 8.6e-08 | 8.64825e-06 ± 1.2e-05 | 8.56164e-07 ± 6.7e-08 |  8.6709e-07 ± 7.3e-08 | 8.20916e-07 ± 6.4e-08 |  0.0768453 ± 0.0095 |  0.140041 ± 0.0058  |
|                 <class 'int'>                  |  1.47062e-05 ± 2e-06  | 1.16581e-06 ± 3.2e-06 |  1.3973e-06 ± 1.5e-07 | 8.64369e-06 ± 1.8e-06 | 8.50928e-07 ± 4.5e-08 | 8.74041e-07 ± 1.8e-07 | 8.23635e-07 ± 5.7e-08 |  0.0760038 ± 0.0092 |  0.141597 ± 0.0061  |
|                <class 'float'>                 | 1.58511e-05 ± 1.6e-05 |  1.08319e-06 ± 1e-06  | 1.37066e-06 ± 1.2e-07 | 8.64998e-06 ± 1.7e-06 | 8.47427e-07 ± 4.9e-08 | 8.70557e-07 ± 1.2e-07 |  8.20852e-07 ± 4e-08  |   0.0771472 ± 0.01  |  0.141433 ± 0.0067  |
|                 <class 'str'>                  | 1.64337e-05 ± 1.9e-05 | 1.28432e-06 ± 2.3e-07 | 1.54576e-06 ± 1.3e-07 | 8.56982e-06 ± 1.9e-06 | 8.54405e-07 ± 7.1e-08 | 8.67703e-07 ± 7.8e-08 | 8.33384e-07 ± 4.5e-08 |  0.0750716 ± 0.0081 |  0.140179 ± 0.0071  |
|                <class 'bytes'>                 |  1.51466e-05 ± 6e-06  | 1.24754e-06 ± 1.4e-07 |  1.51737e-06 ± 1e-07  | 8.51792e-06 ± 9.3e-07 | 8.50387e-07 ± 8.1e-08 | 8.61978e-07 ± 8.9e-08 | 8.16609e-07 ± 5.5e-08 |  0.0762717 ± 0.0098 |  0.140946 ± 0.0071  |
|  ndarray <class 'numpy.uint8'> (480, 848, 3)   | 0.000313989 ± 1.5e-05 | 3.72828e-05 ± 1.2e-05 | 4.37445e-05 ± 4.1e-06 | 5.06987e-05 ± 4.6e-06 | 1.72312e-06 ± 5.7e-07 | 1.67935e-06 ± 8.3e-07 | 1.52627e-06 ± 3.7e-07 |  0.0768254 ± 0.011  |  0.141455 ± 0.0079  |
| ndarray <class 'numpy.float64'> (720, 1280, 3) |  0.00760833 ± 0.00027 |  0.00124917 ± 0.00011 |  0.0013018 ± 0.00014  | 0.000808167 ± 6.2e-05 | 4.52921e-06 ± 1.2e-06 | 4.87276e-06 ± 2.1e-06 | 3.95186e-06 ± 1.2e-06 |   0.07623 ± 0.011   |  0.143197 ± 0.0056  |
| ndarray <class 'numpy.float64'> (10000, 10000) |    0.24885 ± 0.0083   |   0.0904866 ± 0.0043  |   0.0386107 ± 0.0026  |   0.0243653 ± 0.0037  | 9.64328e-06 ± 1.3e-06 | 1.02069e-05 ± 3.7e-06 | 9.80738e-06 ± 3.8e-06 |  0.583287 ± 0.0053  |   0.715779 ± 0.047  |
+------------------------------------------------+-----------------------+-----------------------+-----------------------+-----------------------+-----------------------+-----------------------+-----------------------+---------------------+---------------------+

Comparing with benchmark_shared_object_result_v0.0.4.npz
	show if mean has increased (￪) or decreased (￬) with (mean - prev_mean) and its confidence level
+---------------------------------------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+
| Object Type / Duration for 1 obj (mean, conf lvl) |        create        |        fetch         |        assign        |      create_ref      |       modified       |      triggered       |       trigger        | 2 proc fetch_assign  | 5 proc fetch_assign  |
+---------------------------------------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+
|                 <class 'NoneType'>                | ￬ (-3.258e-07), 0.01 |  ￪ (4.875e-08), 0.71 |  ￪ (2.519e-08), 0.55 |  ￪ (7.884e-09), 0.10 |  ￪ (1.129e-08), 0.60 |  ￪ (3.178e-08), 1.00 | ￬ (-5.438e-09), 0.13 |  ￪ (0.004907), 1.00  | ￬ (-0.0002386), 0.06 |
|                   <class 'bool'>                  | ￬ (-3.417e-07), 1.00 | ￬ (-9.183e-08), 0.43 | ￬ (-3.069e-08), 1.00 | ￬ (-4.471e-08), 0.07 |  ￪ (1.304e-08), 1.00 |  ￪ (1.926e-08), 1.00 | ￬ (-1.597e-08), 1.00 |  ￪ (0.0002528), 0.15 | ￬ (-0.001105), 0.63  |
|                   <class 'int'>                   | ￬ (-1.192e-06), 1.00 |  ￪ (1.32e-07), 0.80  | ￬ (-7.325e-09), 0.82 | ￬ (-1.543e-07), 0.65 |  ￪ (9.216e-09), 1.00 |  ￪ (2.326e-08), 1.00 | ￬ (-2.452e-08), 1.00 | ￬ (-0.005732), 1.00  | ￬ (-0.002981), 0.93  |
|                  <class 'float'>                  |  ￪ (1.19e-07), 0.18  |  ￪ (2.213e-08), 0.50 | ￬ (-6.969e-09), 0.87 | ￬ (-4.594e-07), 0.89 |  ￪ (1.111e-08), 1.00 |  ￪ (4.588e-08), 1.00 | ￬ (-6.168e-08), 1.00 |  ￪ (0.003215), 0.99  | ￬ (-0.0006885), 0.41 |
|                   <class 'str'>                   |  ￪ (8.557e-07), 0.84 |  ￪ (6.79e-09), 0.57  | ￬ (-1.333e-07), 1.00 |  ￪ (7.257e-09), 0.07 |  ￪ (8.201e-09), 1.00 |  ￪ (3.713e-08), 1.00 | ￬ (-3.149e-08), 1.00 | ￬ (-0.001345), 0.70  | ￬ (-0.002418), 0.93  |
|                  <class 'bytes'>                  | ￬ (-3.044e-07), 0.64 |  ￪ (5.917e-09), 0.66 | ￬ (-1.339e-07), 1.00 | ￬ (-1.665e-07), 1.00 |  ￪ (5.722e-09), 0.93 |  ￪ (1.169e-08), 0.99 | ￬ (-3.03e-08), 1.00  | ￬ (-0.000957), 0.52  |  ￪ (0.0005427), 0.32 |
|    ndarray <class 'numpy.uint8'> (480, 848, 3)    | ￬ (-5.591e-06), 1.00 |  ￪ (4.735e-07), 0.67 |  ￪ (1.294e-06), 1.00 | ￬ (-1.164e-06), 1.00 |  ￪ (1.047e-07), 1.00 | ￬ (-1.792e-08), 0.46 | ￬ (-1.302e-07), 1.00 |   ￪ (0.00033), 0.17  | ￬ (-0.0003591), 0.19 |
|   ndarray <class 'numpy.float64'> (720, 1280, 3)  |  ￪ (5.284e-05), 1.00 |  ￪ (3.549e-06), 0.54 |  ￪ (6.051e-05), 1.00 | ￬ (-1.537e-05), 1.00 |  ￪ (2.162e-07), 1.00 |  ￪ (4.727e-07), 1.00 | ￬ (-1.856e-07), 0.98 | ￬ (-0.0006817), 0.34 | ￬ (-0.004244), 1.00  |
|   ndarray <class 'numpy.float64'> (10000, 10000)  |  ￪ (0.009023), 0.95  |  ￪ (0.001023), 0.45  | ￬ (-0.0003512), 0.49 |  ￪ (0.001297), 0.92  |  ￪ (4.052e-07), 0.89 |  ￪ (1.161e-06), 0.96 |  ￪ (3.829e-07), 0.43 |   ￪ (0.0158), 0.93   |   ￪ (0.02774), 0.88  |
+---------------------------------------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+
