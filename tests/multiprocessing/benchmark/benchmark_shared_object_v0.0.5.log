---------- Benchmark creating SharedObject ----------
<class 'NoneType'>: 1000 iterations take 0.03731 seconds
<class 'bool'>: 1000 iterations take 0.01501 seconds
<class 'int'>: 1000 iterations take 0.01503 seconds
<class 'float'>: 1000 iterations take 0.01533 seconds
<class 'str'> (len=50): 1000 iterations take 0.0151 seconds
<class 'bytes'> (len=50): 1000 iterations take 0.01509 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.uint8'> shape=(480, 848, 3)): 1000 iterations take 0.3091 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(720, 1280, 3)): 500 iterations take 3.779 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(10000, 10000)): 10 iterations take 2.565 seconds

---------- Benchmark fetching SharedObject ----------
<class 'NoneType'>: 1000 iterations take 0.001018 seconds
<class 'bool'>: 1000 iterations take 0.0009805 seconds
<class 'int'>: 1000 iterations take 0.001028 seconds
<class 'float'>: 1000 iterations take 0.001161 seconds
<class 'str'> (len=50): 1000 iterations take 0.001214 seconds
<class 'bytes'> (len=50): 1000 iterations take 0.001187 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.uint8'> shape=(480, 848, 3)): 1000 iterations take 0.03619 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(720, 1280, 3)): 1000 iterations take 1.27 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(10000, 10000)): 20 iterations take 1.824 seconds

---------- Benchmark assigning SharedObject ----------
<class 'NoneType'>: 1000 iterations take 0.001326 seconds
<class 'bool'>: 1000 iterations take 0.001297 seconds
<class 'int'>: 1000 iterations take 0.001373 seconds
<class 'float'>: 1000 iterations take 0.001372 seconds
<class 'str'> (len=50): 1000 iterations take 0.001594 seconds
<class 'bytes'> (len=50): 1000 iterations take 0.00174 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.uint8'> shape=(480, 848, 3)): 1000 iterations take 0.04118 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(720, 1280, 3)): 1000 iterations take 1.259 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(10000, 10000)): 50 iterations take 2.011 seconds

---------- Benchmark creating from existing SharedObject ----------
<class 'NoneType'>: 1000 iterations take 0.008133 seconds
<class 'bool'>: 1000 iterations take 0.008304 seconds
<class 'int'>: 1000 iterations take 0.008046 seconds
<class 'float'>: 1000 iterations take 0.008159 seconds
<class 'str'> (len=50): 1000 iterations take 0.008575 seconds
<class 'bytes'> (len=50): 1000 iterations take 0.008408 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.uint8'> shape=(480, 848, 3)): 1000 iterations take 0.05065 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(720, 1280, 3)): 1000 iterations take 0.7918 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(10000, 10000)): 50 iterations take 1.397 seconds

---------- Benchmark checking SharedObject modified ----------
<class 'NoneType'>: 1000 iterations take 0.000842 seconds
<class 'bool'>: 1000 iterations take 0.0007896 seconds
<class 'int'>: 1000 iterations take 0.0007803 seconds
<class 'float'>: 1000 iterations take 0.0007795 seconds
<class 'str'> (len=50): 1000 iterations take 0.0007775 seconds
<class 'bytes'> (len=50): 1000 iterations take 0.0007767 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.uint8'> shape=(480, 848, 3)): 1000 iterations take 0.001589 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(720, 1280, 3)): 1000 iterations take 0.00461 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(10000, 10000)): 50 iterations take 0.0005106 seconds

---------- Benchmark checking SharedObject triggered ----------
<class 'NoneType'>: 1000 iterations take 0.0008902 seconds
<class 'bool'>: 1000 iterations take 0.000857 seconds
<class 'int'>: 1000 iterations take 0.0008522 seconds
<class 'float'>: 1000 iterations take 0.000849 seconds
<class 'str'> (len=50): 1000 iterations take 0.000844 seconds
<class 'bytes'> (len=50): 1000 iterations take 0.000857 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.uint8'> shape=(480, 848, 3)): 1000 iterations take 0.001666 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(720, 1280, 3)): 1000 iterations take 0.004531 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(10000, 10000)): 50 iterations take 0.000514 seconds

---------- Benchmark triggering SharedObject ----------
<class 'NoneType'>: 1000 iterations take 0.0008951 seconds
<class 'bool'>: 1000 iterations take 0.0008168 seconds
<class 'int'>: 1000 iterations take 0.0008137 seconds
<class 'float'>: 1000 iterations take 0.0008152 seconds
<class 'str'> (len=50): 1000 iterations take 0.000812 seconds
<class 'bytes'> (len=50): 1000 iterations take 0.0008135 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.uint8'> shape=(480, 848, 3)): 1000 iterations take 0.001535 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(720, 1280, 3)): 1000 iterations take 0.004397 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(10000, 10000)): 50 iterations take 0.0004631 seconds

---------- Benchmark fetching/assigning SharedObject with 2 processes ----------
<class 'NoneType'>: 100 iterations take 0.1774 seconds
<class 'bool'>: 100 iterations take 0.203 seconds
<class 'int'>: 100 iterations take 0.1602 seconds
<class 'float'>: 100 iterations take 0.1998 seconds
<class 'str'> (len=50): 100 iterations take 0.2122 seconds
<class 'bytes'> (len=50): 100 iterations take 0.2029 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.uint8'> shape=(480, 848, 3)): 100 iterations take 0.4072 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(720, 1280, 3)): 100 iterations take 1.905 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(10000, 10000)): 10 iterations take 6.12 seconds

---------- Benchmark fetching/assigning SharedObject with 5 processes ----------
<class 'NoneType'>: 100 iterations take 0.3372 seconds
<class 'bool'>: 100 iterations take 0.3201 seconds
<class 'int'>: 100 iterations take 0.299 seconds
<class 'float'>: 100 iterations take 0.311 seconds
<class 'str'> (len=50): 100 iterations take 0.3394 seconds
<class 'bytes'> (len=50): 100 iterations take 0.334 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.uint8'> shape=(480, 848, 3)): 100 iterations take 0.5619 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(720, 1280, 3)): 100 iterations take 2.274 seconds
<class 'numpy.ndarray'> (dtype=<class 'numpy.float64'> shape=(10000, 10000)): 10 iterations take 6.909 seconds
+------------------------------------------------+-----------------------+-----------------------+-----------------------+-----------------------+-----------------------+-----------------------+-----------------------+----------------------+----------------------+
| Object Type / Duration for 1 obj (mean ± std)  |         create        |         fetch         |         assign        |       create_ref      |        modified       |       triggered       |        trigger        | 2 proc fetch_assign  | 5 proc fetch_assign  |
+------------------------------------------------+-----------------------+-----------------------+-----------------------+-----------------------+-----------------------+-----------------------+-----------------------+----------------------+----------------------+
|               <class 'NoneType'>               | 3.73101e-05 ± 0.00051 |   1.0176e-06 ± 1e-06  | 1.32561e-06 ± 2.3e-07 | 8.13338e-06 ± 3.6e-06 | 8.41956e-07 ± 1.7e-07 |  8.9016e-07 ± 1.7e-07 | 8.95128e-07 ± 1.8e-07 | 0.00177426 ± 0.00041 | 0.00337206 ± 0.00075 |
|                 <class 'bool'>                 | 1.50109e-05 ± 2.9e-06 | 9.80507e-07 ± 1.3e-07 | 1.29685e-06 ± 1.9e-07 |  8.3042e-06 ± 5.5e-06 | 7.89613e-07 ± 1.3e-07 |  8.5696e-07 ± 1.2e-07 | 8.16841e-07 ± 6.1e-08 | 0.00202964 ± 0.0014  | 0.00320062 ± 0.00033 |
|                 <class 'int'>                  |   1.5032e-05 ± 1e-05  | 1.02776e-06 ± 1.1e-07 | 1.37302e-06 ± 1.9e-07 | 8.04556e-06 ± 1.3e-06 | 7.80345e-07 ± 6.2e-08 | 8.52231e-07 ± 7.8e-08 | 8.13674e-07 ± 1.1e-07 | 0.00160223 ± 0.00043 | 0.00299001 ± 0.00038 |
|                <class 'float'>                 | 1.53331e-05 ± 1.7e-05 | 1.16147e-06 ± 5.2e-06 |  1.37173e-06 ± 3e-07  | 8.15938e-06 ± 5.2e-06 | 7.79456e-07 ± 1.2e-07 | 8.49037e-07 ± 5.2e-08 |  8.15209e-07 ± 9e-08  | 0.00199796 ± 0.0023  | 0.00310951 ± 0.0009  |
|                 <class 'str'>                  | 1.50977e-05 ± 5.9e-06 | 1.21444e-06 ± 1.5e-07 | 1.59422e-06 ± 1.5e-07 | 8.57506e-06 ± 1.3e-05 | 7.77494e-07 ± 4.9e-08 | 8.44005e-07 ± 8.7e-08 | 8.11993e-07 ± 4.8e-08 | 0.00212237 ± 0.0018  |  0.003394 ± 0.0011   |
|                <class 'bytes'>                 | 1.50854e-05 ± 8.1e-06 |  1.18731e-06 ± 1e-07  | 1.73982e-06 ± 7.5e-06 |  8.4077e-06 ± 9.7e-06 |  7.76695e-07 ± 5e-08  | 8.57046e-07 ± 5.7e-08 | 8.13508e-07 ± 8.7e-08 | 0.00202908 ± 0.0014  |  0.00333995 ± 0.001  |
|  ndarray <class 'numpy.uint8'> (480, 848, 3)   |  0.000309086 ± 2e-05  | 3.61897e-05 ± 8.3e-06 | 4.11786e-05 ± 1.2e-05 | 5.06529e-05 ± 3.3e-06 | 1.58941e-06 ± 4.3e-07 | 1.66646e-06 ± 3.8e-07 | 1.53503e-06 ± 5.6e-07 | 0.00407214 ± 0.0015  | 0.00561919 ± 0.00081 |
| ndarray <class 'numpy.float64'> (720, 1280, 3) |  0.00755715 ± 0.0005  |  0.00127039 ± 0.00023 |  0.0012591 ± 0.00022  | 0.000791806 ± 8.2e-05 | 4.60954e-06 ± 2.4e-06 | 4.53116e-06 ± 1.8e-06 | 4.39653e-06 ± 2.3e-06 |  0.0190464 ± 0.0058  |  0.022735 ± 0.0038   |
| ndarray <class 'numpy.float64'> (10000, 10000) |    0.256489 ± 0.014   |   0.0912046 ± 0.0034  |   0.0402255 ± 0.0059  |   0.0279389 ± 0.004   | 1.02117e-05 ± 4.6e-06 |  1.02797e-05 ± 4e-06  | 9.26106e-06 ± 3.4e-06 |   0.612047 ± 0.021   |   0.690853 ± 0.02    |
+------------------------------------------------+-----------------------+-----------------------+-----------------------+-----------------------+-----------------------+-----------------------+-----------------------+----------------------+----------------------+

Comparing with benchmark_shared_object_result_v0.0.4.npz
	show if mean has increased (￪) or decreased (￬) with (mean - prev_mean) and its confidence level
+---------------------------------------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+---------------------+---------------------+
| Object Type / Duration for 1 obj (mean, conf lvl) |        create        |        fetch         |        assign        |      create_ref      |       modified       |      triggered       |       trigger        | 2 proc fetch_assign | 5 proc fetch_assign |
+---------------------------------------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+---------------------+---------------------+
|                 <class 'NoneType'>                | ￬ (-7.77e-07), 0.03  |  ￪ (5.552e-09), 0.10 | ￬ (-1.88e-09), 0.15  |  ￪ (9.648e-08), 0.58 | ￬ (-2.641e-08), 0.99 |  ￪ (5.318e-09), 0.57 | ￬ (-7.75e-10), 0.04  |  ￬ (-0.06687), 1.00 |  ￬ (-0.1415), 1.00  |
|                   <class 'bool'>                  | ￬ (-2.905e-07), 0.99 | ￬ (-1.39e-07), 0.61  | ￬ (-5.127e-08), 1.00 | ￬ (-3.888e-07), 0.71 | ￬ (-5.351e-08), 1.00 |  ￪ (9.133e-09), 0.96 | ￬ (-2.004e-08), 1.00 |  ￬ (-0.07456), 1.00 |  ￬ (-0.1379), 1.00  |
|                   <class 'int'>                   | ￬ (-8.664e-07), 0.98 | ￬ (-6.05e-09), 0.83  | ￬ (-3.161e-08), 1.00 | ￬ (-7.524e-07), 1.00 | ￬ (-6.137e-08), 1.00 |  ￪ (1.445e-09), 0.29 | ￬ (-3.448e-08), 1.00 |  ￬ (-0.08013), 1.00 |  ￬ (-0.1416), 1.00  |
|                  <class 'float'>                  | ￬ (-3.991e-07), 0.53 |  ￪ (1.004e-07), 0.46 | ￬ (-5.901e-09), 0.45 |  ￬ (-9.5e-07), 1.00  | ￬ (-5.686e-08), 1.00 |  ￪ (2.436e-08), 1.00 | ￬ (-6.732e-08), 1.00 |  ￬ (-0.07193), 1.00 |   ￬ (-0.139), 1.00  |
|                   <class 'str'>                   | ￬ (-4.804e-07), 0.98 | ￬ (-6.309e-08), 1.00 | ￬ (-8.485e-08), 1.00 |  ￪ (1.25e-08), 0.02  | ￬ (-6.871e-08), 1.00 |  ￪ (1.343e-08), 1.00 | ￬ (-5.288e-08), 1.00 |  ￬ (-0.07429), 1.00 |  ￬ (-0.1392), 1.00  |
|                  <class 'bytes'>                  | ￬ (-3.655e-07), 0.67 | ￬ (-5.432e-08), 1.00 |  ￪ (8.852e-08), 0.29 | ￬ (-2.767e-07), 0.63 | ￬ (-6.797e-08), 1.00 |  ￪ (6.757e-09), 0.90 | ￬ (-3.34e-08), 1.00  |  ￬ (-0.0752), 1.00  |  ￬ (-0.1371), 1.00  |
|    ndarray <class 'numpy.uint8'> (480, 848, 3)    | ￬ (-1.049e-05), 1.00 | ￬ (-6.196e-07), 0.89 | ￬ (-1.272e-06), 1.00 | ￬ (-1.21e-06), 1.00  | ￬ (-2.896e-08), 0.90 | ￬ (-3.082e-08), 0.92 | ￬ (-1.215e-07), 1.00 |  ￬ (-0.07242), 1.00 |  ￬ (-0.1362), 1.00  |
|   ndarray <class 'numpy.float64'> (720, 1280, 3)  |  ￪ (1.659e-06), 0.05 |  ￪ (2.478e-05), 1.00 |  ￪ (1.782e-05), 0.98 | ￬ (-3.173e-05), 1.00 |  ￪ (2.965e-07), 1.00 |  ￪ (1.311e-07), 0.91 |  ￪ (2.591e-07), 0.99 |  ￬ (-0.05787), 1.00 |  ￬ (-0.1247), 1.00  |
|   ndarray <class 'numpy.float64'> (10000, 10000)  |   ￪ (0.01666), 0.99  |  ￪ (0.001741), 0.72  |  ￪ (0.001264), 0.82  |  ￪ (0.004871), 1.00  |  ￪ (9.735e-07), 0.85 |  ￪ (1.234e-06), 0.96 | ￬ (-1.634e-07), 0.21 |   ￪ (0.04456), 1.00 |  ￪ (0.002817), 0.24 |
+---------------------------------------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+----------------------+---------------------+---------------------+
